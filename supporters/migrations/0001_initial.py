# Generated by Django 5.2.5 on 2025-08-20 13:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("geography", "0001_initial"),
        ("membership", "0001_initial"),
        ("membership_cards", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SupporterPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "discount_tickets",
                    models.BooleanField(
                        default=False,
                        verbose_name="Discount Tickets & Early Bird Offers",
                    ),
                ),
                (
                    "vip_experiences",
                    models.BooleanField(
                        default=False, verbose_name="VIP Match Experiences"
                    ),
                ),
                (
                    "international_matches",
                    models.BooleanField(
                        default=False, verbose_name="International Match Notifications"
                    ),
                ),
                (
                    "local_matches",
                    models.BooleanField(
                        default=False, verbose_name="Local League Match Updates"
                    ),
                ),
                (
                    "youth_matches",
                    models.BooleanField(
                        default=False, verbose_name="Youth & Development Matches"
                    ),
                ),
                (
                    "official_jerseys",
                    models.BooleanField(
                        default=False, verbose_name="Official SAFA Jerseys & Kit"
                    ),
                ),
                (
                    "casual_clothing",
                    models.BooleanField(
                        default=False, verbose_name="Casual SAFA Clothing & Accessories"
                    ),
                ),
                (
                    "limited_editions",
                    models.BooleanField(
                        default=False, verbose_name="Limited Edition Merchandise"
                    ),
                ),
                (
                    "seasonal_sales",
                    models.BooleanField(
                        default=False, verbose_name="Seasonal Sales & Clearance"
                    ),
                ),
                (
                    "match_travel_packages",
                    models.BooleanField(
                        default=False, verbose_name="Match Travel Packages"
                    ),
                ),
                (
                    "accommodation_deals",
                    models.BooleanField(
                        default=False, verbose_name="Discounted Accommodation"
                    ),
                ),
                (
                    "transport_offers",
                    models.BooleanField(
                        default=False, verbose_name="Transport & Flight Deals"
                    ),
                ),
                (
                    "international_tours",
                    models.BooleanField(
                        default=False, verbose_name="International Tour Packages"
                    ),
                ),
                (
                    "exclusive_content",
                    models.BooleanField(
                        default=False, verbose_name="Exclusive Digital Content"
                    ),
                ),
                (
                    "player_interviews",
                    models.BooleanField(
                        default=False, verbose_name="Player Interviews & Behind Scenes"
                    ),
                ),
                (
                    "live_streaming",
                    models.BooleanField(
                        default=False, verbose_name="Live Streaming Access"
                    ),
                ),
                (
                    "podcasts_videos",
                    models.BooleanField(
                        default=False, verbose_name="SAFA Podcasts & Video Series"
                    ),
                ),
                (
                    "community_events",
                    models.BooleanField(
                        default=False, verbose_name="Community Fan Events"
                    ),
                ),
                (
                    "coaching_clinics",
                    models.BooleanField(
                        default=False, verbose_name="Coaching Clinics & Workshops"
                    ),
                ),
                (
                    "player_meetups",
                    models.BooleanField(
                        default=False, verbose_name="Player Meet & Greet Events"
                    ),
                ),
                (
                    "charity_initiatives",
                    models.BooleanField(
                        default=False, verbose_name="SAFA Charity & CSI Initiatives"
                    ),
                ),
                (
                    "stadium_dining",
                    models.BooleanField(
                        default=False, verbose_name="Stadium Dining Offers"
                    ),
                ),
                (
                    "partner_restaurant_deals",
                    models.BooleanField(
                        default=False, verbose_name="Partner Restaurant Discounts"
                    ),
                ),
                (
                    "catering_packages",
                    models.BooleanField(
                        default=False, verbose_name="Match Day Catering Packages"
                    ),
                ),
                (
                    "insurance_products",
                    models.BooleanField(
                        default=False, verbose_name="Sports & Travel Insurance"
                    ),
                ),
                (
                    "banking_offers",
                    models.BooleanField(
                        default=False, verbose_name="SAFA Partner Banking Offers"
                    ),
                ),
                (
                    "investment_opportunities",
                    models.BooleanField(
                        default=False, verbose_name="Sports Investment Opportunities"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Email Notifications"
                    ),
                ),
                (
                    "sms_alerts",
                    models.BooleanField(default=False, verbose_name="SMS Alerts"),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Mobile App Push Notifications"
                    ),
                ),
                (
                    "whatsapp_updates",
                    models.BooleanField(default=False, verbose_name="WhatsApp Updates"),
                ),
                (
                    "communication_frequency",
                    models.CharField(
                        choices=[
                            ("IMMEDIATE", "Immediate (as they happen)"),
                            ("DAILY", "Daily digest"),
                            ("WEEKLY", "Weekly summary"),
                            ("MONTHLY", "Monthly newsletter"),
                            ("MAJOR_EVENTS", "Major events only"),
                        ],
                        default="WEEKLY",
                        max_length=20,
                        verbose_name="Communication Frequency",
                    ),
                ),
                (
                    "youth_development",
                    models.BooleanField(
                        default=False, verbose_name="Youth Development Programs"
                    ),
                ),
                (
                    "womens_football",
                    models.BooleanField(default=False, verbose_name="Women's Football"),
                ),
                (
                    "disability_football",
                    models.BooleanField(
                        default=False, verbose_name="Disability Football"
                    ),
                ),
                (
                    "referee_programs",
                    models.BooleanField(
                        default=False, verbose_name="Referee Development Programs"
                    ),
                ),
                (
                    "coaching_development",
                    models.BooleanField(
                        default=False, verbose_name="Coaching Development"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Supporter Preference",
                "verbose_name_plural": "Supporter Preferences",
            },
        ),
        migrations.CreateModel(
            name="SupporterProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "membership_type",
                    models.CharField(
                        choices=[
                            ("PREMIUM", "Premium Supporter"),
                            ("VIP", "VIP Supporter"),
                            ("FAMILY_BASIC", "Family Basic Package"),
                            ("FAMILY_PREMIUM", "Family Premium Package"),
                            ("FAMILY_VIP", "Family VIP Package"),
                        ],
                        default="PREMIUM",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("id_number", models.CharField(blank=True, max_length=64)),
                (
                    "id_document",
                    models.FileField(
                        blank=True, null=True, upload_to="documents/supporter_ids/"
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address", models.TextField(blank=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Latitude coordinate",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Longitude coordinate",
                        max_digits=11,
                        null=True,
                    ),
                ),
                (
                    "location_city",
                    models.CharField(
                        blank=True, help_text="City from geolocation", max_length=100
                    ),
                ),
                (
                    "location_province",
                    models.CharField(
                        blank=True,
                        help_text="Province from geolocation",
                        max_length=100,
                    ),
                ),
                (
                    "location_country",
                    models.CharField(
                        blank=True, help_text="Country from geolocation", max_length=100
                    ),
                ),
                (
                    "location_accuracy",
                    models.FloatField(
                        blank=True, help_text="Location accuracy in meters", null=True
                    ),
                ),
                (
                    "location_timestamp",
                    models.DateTimeField(
                        blank=True, help_text="When location was captured", null=True
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                (
                    "digital_card",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="membership_cards.digitalcard",
                    ),
                ),
                (
                    "favorite_club",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.club",
                    ),
                ),
                (
                    "invoice",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="membership.invoice",
                    ),
                ),
                (
                    "physical_card",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="membership_cards.physicalcard",
                    ),
                ),
                (
                    "preferences",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="supporters.supporterpreferences",
                        verbose_name="Marketing Preferences",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
