# Generated by Django 5.2.5 on 2025-09-04 06:44

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('league_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='matchevent',
            options={'ordering': ['minute', 'recorded_at']},
        ),
        migrations.RenameField(
            model_name='matchevent',
            old_name='created_at',
            new_name='recorded_at',
        ),
        migrations.AddField(
            model_name='matchevent',
            name='is_own_goal',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='matchevent',
            name='is_penalty',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='matchevent',
            name='recorded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='matchevent',
            name='event_type',
            field=models.CharField(choices=[('goal', 'Goal'), ('own_goal', 'Own Goal'), ('penalty_goal', 'Penalty Goal'), ('yellow_card', 'Yellow Card'), ('red_card', 'Red Card'), ('second_yellow', 'Second Yellow Card'), ('substitution', 'Substitution'), ('penalty_miss', 'Penalty Miss'), ('injury', 'Injury'), ('offside', 'Offside'), ('foul', 'Foul')], max_length=20),
        ),
        migrations.AlterField(
            model_name='matchevent',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name='TeamSheet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('confirmed', 'Confirmed'), ('amended', 'Amended')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('formation', models.CharField(default='4-4-2', help_text='e.g., 4-4-2, 3-5-2', max_length=10)),
                ('captain', models.CharField(blank=True, max_length=200)),
                ('vice_captain', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True, help_text='Team notes, tactics, etc.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_sheets', to='league_management.match')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_sheets', to='league_management.competitionteam')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('match', 'team')},
            },
        ),
        migrations.CreateModel(
            name='TeamSheetTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('formation', models.CharField(default='4-4-2', max_length=10)),
                ('players', models.JSONField(default=list, help_text='List of player data for template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sheet_templates', to='league_management.competitionteam')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('team_sheet_created', 'Team Sheet Created'), ('team_sheet_submitted', 'Team Sheet Submitted'), ('team_sheet_amended', 'Team Sheet Amended'), ('player_selected', 'Player Selected'), ('player_deselected', 'Player Deselected'), ('card_issued', 'Card Issued'), ('suspension_applied', 'Suspension Applied'), ('suspension_served', 'Suspension Served'), ('match_event_added', 'Match Event Added'), ('match_result_updated', 'Match Result Updated'), ('fixture_generated', 'Fixture Generated'), ('competition_created', 'Competition Created'), ('team_registered', 'Team Registered')], max_length=50)),
                ('description', models.TextField()),
                ('details', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('competition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='league_management.competition')),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='league_management.match')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='league_management.competitionteam')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['action_type', 'timestamp'], name='league_mana_action__a43c82_idx'), models.Index(fields=['user', 'timestamp'], name='league_mana_user_id_9568f9_idx'), models.Index(fields=['competition', 'timestamp'], name='league_mana_competi_9600a7_idx')],
            },
        ),
        migrations.CreateModel(
            name='PlayerDiscipline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=200)),
                ('total_yellow_cards', models.PositiveIntegerField(default=0)),
                ('total_red_cards', models.PositiveIntegerField(default=0)),
                ('total_second_yellows', models.PositiveIntegerField(default=0)),
                ('is_suspended', models.BooleanField(default=False)),
                ('suspension_matches', models.PositiveIntegerField(default=0)),
                ('suspension_until', models.DateField(blank=True, null=True)),
                ('suspension_reason', models.TextField(blank=True)),
                ('suspension_type', models.CharField(blank=True, choices=[('automatic', 'Automatic Suspension'), ('manual', 'Manual Suspension'), ('appeal', 'Appeal Suspension')], max_length=20)),
                ('last_reset_date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_discipline', to='league_management.competition')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_discipline', to='league_management.competitionteam')),
            ],
            options={
                'ordering': ['-total_red_cards', '-total_yellow_cards', 'player_name'],
                'unique_together': {('competition', 'team', 'player_name')},
            },
        ),
        migrations.CreateModel(
            name='TeamSheetPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(max_length=200)),
                ('jersey_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('position', models.CharField(choices=[('GK', 'Goalkeeper'), ('LB', 'Left Back'), ('CB', 'Center Back'), ('RB', 'Right Back'), ('LWB', 'Left Wing Back'), ('RWB', 'Right Wing Back'), ('CDM', 'Defensive Midfielder'), ('CM', 'Central Midfielder'), ('CAM', 'Attacking Midfielder'), ('LM', 'Left Midfielder'), ('RM', 'Right Midfielder'), ('LW', 'Left Winger'), ('RW', 'Right Winger'), ('ST', 'Striker'), ('CF', 'Center Forward'), ('SUB', 'Substitute')], max_length=10)),
                ('is_starting', models.BooleanField(default=True)),
                ('is_captain', models.BooleanField(default=False)),
                ('is_vice_captain', models.BooleanField(default=False)),
                ('is_eligible', models.BooleanField(default=True)),
                ('suspension_reason', models.TextField(blank=True, help_text='Reason if not eligible')),
                ('minutes_played', models.PositiveIntegerField(default=0)),
                ('goals_scored', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('yellow_cards', models.PositiveIntegerField(default=0)),
                ('red_cards', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team_sheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='league_management.teamsheet')),
            ],
            options={
                'ordering': ['jersey_number'],
                'unique_together': {('team_sheet', 'jersey_number')},
            },
        ),
    ]
