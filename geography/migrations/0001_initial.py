# Generated by Django 5.2.1 on 2025-05-25 11:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Association",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("acronym", models.CharField(max_length=10)),
                ("association_type", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="association_logos/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Club",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("short_name", models.CharField(max_length=20)),
                ("founded_year", models.PositiveIntegerField(blank=True, null=True)),
                ("home_ground", models.CharField(blank=True, max_length=100)),
                ("club_colors", models.CharField(blank=True, max_length=100)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="club_logos/"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Continent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "code",
                    models.CharField(
                        choices=[
                            ("AF", "Africa"),
                            ("AS", "Asia"),
                            ("EU", "Europe"),
                            ("NA", "North America"),
                            ("OC", "Oceania"),
                            ("SA", "South America"),
                        ],
                        max_length=2,
                        unique=True,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RegistrationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("allowed_user_roles", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="ContinentFederation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("acronym", models.CharField(max_length=10, unique=True)),
                ("description", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="continent_federation_logos/"
                    ),
                ),
                (
                    "sport_code",
                    models.CharField(
                        choices=[
                            ("SOCCER", "Soccer"),
                            ("RUGBY", "Rugby"),
                            ("CRICKET", "Cricket"),
                            ("BASKETBALL", "Basketball"),
                            ("HOCKEY", "Hockey"),
                            ("TENNIS", "Tennis"),
                            ("OTHER", "Other"),
                        ],
                        help_text="Sport code for this continental federation",
                        max_length=10,
                    ),
                ),
                (
                    "continent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="federations",
                        to="geography.continent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Continent Federation",
                "verbose_name_plural": "Continent Federations",
                "ordering": ["continent", "sport_code"],
            },
        ),
        migrations.CreateModel(
            name="ContinentRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("acronym", models.CharField(max_length=10, unique=True)),
                ("description", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="continent_region_logos/"
                    ),
                ),
                (
                    "continent_federation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="regions",
                        to="geography.continentfederation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Continental Region",
                "verbose_name_plural": "Continental Regions",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("fifa_code", models.CharField(max_length=3, unique=True)),
                (
                    "association_acronym",
                    models.CharField(default="SAFA", max_length=15),
                ),
                ("is_default", models.BooleanField(default=False)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="country_logos/"
                    ),
                ),
                (
                    "continent_region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="countries",
                        to="geography.continentregion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN", "System Admin"),
                            ("ADMIN_COUNTRY", "Country Admin"),
                            ("PLAYER", "Player"),
                            ("CLUB", "Club Manager"),
                            ("REFEREE", "Referee"),
                            ("FED_ADMIN", "Federation Admin"),
                            ("PUBLIC", "Public User"),
                            ("COACH", "Coach"),
                            ("EXECUTIVE", "Exco Member"),
                        ],
                        default="PLAYER",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=50)),
                ("middle_name", models.CharField(blank=True, max_length=100)),
                ("surname", models.CharField(blank=True, max_length=100)),
                ("alias", models.CharField(blank=True, max_length=100)),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="email address",
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                    ),
                ),
                ("id_number", models.CharField(blank=True, max_length=20)),
                (
                    "id_number_other",
                    models.CharField(blank=True, max_length=25, null=True, unique=True),
                ),
                ("passport_number", models.CharField(blank=True, max_length=25)),
                (
                    "id_document_type",
                    models.CharField(
                        choices=[
                            ("BC", "Birth Certificate"),
                            ("PP", "Passport"),
                            ("ID", "National ID"),
                            ("DL", "Driver License"),
                            ("OT", "Other"),
                        ],
                        default="ID",
                        max_length=2,
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("membership_card", models.BooleanField(default=False)),
                ("payment_required", models.BooleanField(default=True)),
                (
                    "safa_id",
                    models.CharField(blank=True, max_length=5, null=True, unique=True),
                ),
                (
                    "fifa_id",
                    models.CharField(blank=True, max_length=7, null=True, unique=True),
                ),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                (
                    "document",
                    models.FileField(
                        blank=True, null=True, upload_to="documents/%Y/%m/%d/"
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="users",
                        to="geography.country",
                        verbose_name="Registered Country",
                    ),
                ),
                (
                    "registration_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="geography.registrationtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="NationalFederation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("acronym", models.CharField(max_length=10)),
                ("description", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="national_federation_logos/"
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="federations",
                        to="geography.country",
                    ),
                ),
            ],
            options={
                "verbose_name": "National Federation",
                "verbose_name_plural": "National Federations",
            },
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("membership_type", models.CharField(max_length=50)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "player_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("JR", "Junior (<18)"),
                            ("SR", "Senior (18+)"),
                            ("SU", "Supporter"),
                        ],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "jersey_number",
                    models.PositiveSmallIntegerField(blank=True, null=True),
                ),
                ("position", models.CharField(blank=True, max_length=50)),
                (
                    "association",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="geography.association",
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="geography.club",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "national_federation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="members",
                        to="geography.nationalfederation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membership",
                "verbose_name_plural": "Memberships",
            },
        ),
        migrations.AddField(
            model_name="association",
            name="national_federation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="associations",
                to="geography.nationalfederation",
            ),
        ),
        migrations.CreateModel(
            name="Province",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=5)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="province_logos/"
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="provinces",
                        to="geography.country",
                    ),
                ),
            ],
            options={
                "unique_together": {("code", "country")},
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10)),
                (
                    "logo",
                    models.ImageField(blank=True, null=True, upload_to="region_logos/"),
                ),
                (
                    "national_federation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="regions",
                        to="geography.nationalfederation",
                    ),
                ),
                (
                    "province",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="regions",
                        to="geography.province",
                    ),
                ),
            ],
            options={
                "unique_together": {("code", "province", "national_federation")},
            },
        ),
        migrations.AddField(
            model_name="club",
            name="region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="clubs",
                to="geography.region",
            ),
        ),
        migrations.CreateModel(
            name="WorldSportsBody",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(null=True)),
                ("updated_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=100)),
                ("acronym", models.CharField(max_length=10, unique=True)),
                (
                    "sport_code",
                    models.CharField(
                        choices=[
                            ("SOCCER", "Soccer"),
                            ("RUGBY", "Rugby"),
                            ("CRICKET", "Cricket"),
                            ("BASKETBALL", "Basketball"),
                            ("HOCKEY", "Hockey"),
                            ("TENNIS", "Tennis"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("website", models.URLField(blank=True)),
                (
                    "logo",
                    models.ImageField(
                        blank=True, null=True, upload_to="world_bodies_logos/"
                    ),
                ),
                (
                    "continents",
                    models.ManyToManyField(
                        related_name="world_bodies", to="geography.continent"
                    ),
                ),
            ],
            options={
                "verbose_name": "World Sports Body",
                "verbose_name_plural": "World Sports Bodies",
                "ordering": ["sport_code", "name"],
            },
        ),
        migrations.AddField(
            model_name="nationalfederation",
            name="world_body",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="national_federations",
                to="geography.worldsportsbody",
            ),
        ),
        migrations.AddField(
            model_name="continentfederation",
            name="world_body",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="continental_federations",
                to="geography.worldsportsbody",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="association",
            unique_together={("acronym", "national_federation")},
        ),
        migrations.AlterUniqueTogether(
            name="nationalfederation",
            unique_together={("country", "world_body")},
        ),
        migrations.AlterUniqueTogether(
            name="continentfederation",
            unique_together={("continent", "sport_code")},
        ),
    ]
