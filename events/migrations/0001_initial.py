# Generated by Django 5.2.5 on 2025-08-20 13:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("geography", "0001_initial"),
        ("supporters", "0001_initial"),
        ("membership", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "ticket_number",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("base_price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "discount_applied",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("final_price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="event_tickets",
                        to="membership.invoice",
                    ),
                ),
                (
                    "supporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="supporters.supporterprofile",
                    ),
                ),
                ("qr_code", models.CharField(blank=True, max_length=100, unique=True)),
                ("barcode", models.CharField(blank=True, max_length=50, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RESERVED", "Reserved"),
                            ("PAID", "Paid"),
                            ("USED", "Used"),
                            ("CANCELLED", "Cancelled"),
                            ("REFUNDED", "Refunded"),
                        ],
                        default="RESERVED",
                        max_length=20,
                    ),
                ),
                ("purchased_at", models.DateTimeField(auto_now_add=True)),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("special_requirements", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-purchased_at"],
            },
        ),
        migrations.CreateModel(
            name="TicketGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "group_number",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("group_name", models.CharField(blank=True, max_length=200)),
                ("group_size", models.PositiveIntegerField()),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "discount_applied",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_groups",
                        to="membership.invoice",
                    ),
                ),
                (
                    "primary_contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="supporters.supporterprofile",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("CONFIRMED", "Confirmed"),
                            ("PAID", "Paid"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Stadium",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("short_name", models.CharField(blank=True, max_length=50)),
                ("capacity", models.PositiveIntegerField()),
                ("city", models.CharField(max_length=100)),
                ("address", models.TextField(blank=True)),
                (
                    "surface_type",
                    models.CharField(
                        choices=[
                            ("GRASS", "Natural Grass"),
                            ("ARTIFICIAL", "Artificial Turf"),
                            ("HYBRID", "Hybrid"),
                        ],
                        default="GRASS",
                        max_length=20,
                    ),
                ),
                ("has_roof", models.BooleanField(default=False)),
                ("has_lighting", models.BooleanField(default=True)),
                ("parking_spaces", models.PositiveIntegerField(default=0)),
                ("contact_person", models.CharField(blank=True, max_length=200)),
                ("contact_phone", models.CharField(blank=True, max_length=20)),
                ("contact_email", models.EmailField(blank=True, max_length=254)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "province",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geography.province",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SeatMap",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("section", models.CharField(max_length=20)),
                ("row", models.CharField(max_length=10)),
                ("seat_number", models.CharField(max_length=10)),
                (
                    "price_tier",
                    models.CharField(
                        choices=[
                            ("PREMIUM", "Premium"),
                            ("VIP", "VIP"),
                            ("STANDARD", "Standard"),
                            ("ECONOMY", "Economy"),
                            ("STUDENT", "Student"),
                            ("CORPORATE", "Corporate Box"),
                        ],
                        max_length=20,
                    ),
                ),
                ("base_price", models.DecimalField(decimal_places=2, max_digits=8)),
                ("is_wheelchair_accessible", models.BooleanField(default=False)),
                ("has_restricted_view", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "stadium",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seats",
                        to="events.stadium",
                    ),
                ),
            ],
            options={
                "ordering": ["section", "row", "seat_number"],
            },
        ),
        migrations.CreateModel(
            name="InternationalMatch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("safa_id", models.CharField(blank=True, max_length=20, unique=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "match_type",
                    models.CharField(
                        choices=[
                            ("FRIENDLY", "International Friendly"),
                            ("QUALIFIER", "World Cup Qualifier"),
                            ("AFCON", "AFCON Match"),
                            ("COSAFA", "COSAFA Cup"),
                            ("TOURNAMENT", "Tournament Match"),
                        ],
                        max_length=20,
                    ),
                ),
                ("home_team", models.CharField(default="South Africa", max_length=100)),
                ("away_team", models.CharField(max_length=100)),
                ("match_date", models.DateTimeField()),
                ("tickets_available", models.PositiveIntegerField(default=0)),
                ("tickets_sold", models.PositiveIntegerField(default=0)),
                ("sales_open_date", models.DateTimeField()),
                ("sales_close_date", models.DateTimeField()),
                ("enable_early_bird", models.BooleanField(default=True)),
                (
                    "early_bird_discount",
                    models.DecimalField(decimal_places=2, default=10.0, max_digits=5),
                ),
                ("early_bird_end_date", models.DateTimeField(blank=True, null=True)),
                ("enable_group_discount", models.BooleanField(default=True)),
                ("group_size_minimum", models.PositiveIntegerField(default=10)),
                (
                    "group_discount_percentage",
                    models.DecimalField(decimal_places=2, default=15.0, max_digits=5),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "stadium",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="events.stadium"
                    ),
                ),
            ],
            options={
                "ordering": ["-match_date"],
            },
        ),
    ]
