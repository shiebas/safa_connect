# Generated by Django 5.2.5 on 2025-08-20 13:18

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("geography", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="OrganizationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("NATIONAL", "National Federation"),
                            ("PROVINCE", "Province"),
                            ("REGION", "Region"),
                            ("LFA", "Local Football Association"),
                            ("ASSOCIATION", "Association"),
                            ("CLUB", "Club"),
                        ],
                        max_length=20,
                    ),
                ),
                ("requires_approval", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["level"],
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN_NATIONAL", "National Federation Admin"),
                            (
                                "ADMIN_NATIONAL_ACCOUNTS",
                                "National Accounts Administrator",
                            ),
                            ("ADMIN_PROVINCE", "Provincial Administrator"),
                            ("ADMIN_REGION", "Regional Administrator"),
                            ("ADMIN_LOCAL_FED", "Local Federation Administrator"),
                            ("CLUB_ADMIN", "Club Administrator"),
                            ("ASSOCIATION_ADMIN", "Association Administrator"),
                        ],
                        default="ADMIN_PROVINCE",
                        max_length=30,
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="last name"),
                ),
                (
                    "id_document_type",
                    models.CharField(
                        choices=[
                            ("BC", "Birth Certificate"),
                            ("PP", "Passport"),
                            ("ID", "National ID"),
                            ("DL", "Driver License"),
                            ("OT", "Other"),
                        ],
                        default="ID",
                        max_length=5,
                    ),
                ),
                (
                    "id_number",
                    models.CharField(
                        blank=True,
                        help_text="South African ID Number",
                        max_length=13,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "passport_number",
                    models.CharField(
                        blank=True,
                        help_text="Passport Number",
                        max_length=25,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "id_number_other",
                    models.CharField(
                        blank=True,
                        help_text="Other identification number",
                        max_length=25,
                        null=True,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                (
                    "id_document",
                    models.FileField(blank=True, null=True, upload_to="id_documents/"),
                ),
                (
                    "safa_id",
                    models.CharField(
                        blank=True,
                        help_text="Unique SAFA ID",
                        max_length=5,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "fifa_id",
                    models.CharField(
                        blank=True,
                        help_text="Unique FIFA ID",
                        max_length=7,
                        null=True,
                        unique=True,
                    ),
                ),
                ("country_code", models.CharField(default="ZAF", max_length=3)),
                (
                    "nationality",
                    models.CharField(default="South African", max_length=50),
                ),
                (
                    "popi_act_consent",
                    models.BooleanField(default=False, help_text="Consent to POPI Act"),
                ),
                (
                    "is_approved",
                    models.BooleanField(
                        default=False,
                        help_text="Indicates if the user's registration has been approved by an admin.",
                    ),
                ),
                (
                    "membership_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Approval"),
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                            ("EXPIRED", "Expired"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("membership_activated_date", models.DateField(blank=True, null=True)),
                ("registration_date", models.DateField(auto_now_add=True)),
                (
                    "has_sa_passport",
                    models.BooleanField(
                        default=False,
                        help_text="Does the user have a South African passport?",
                    ),
                ),
                (
                    "sa_passport_number",
                    models.CharField(
                        blank=True,
                        help_text="South African Passport Number",
                        max_length=25,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "sa_passport_document",
                    models.FileField(
                        blank=True,
                        help_text="Scanned copy of SA Passport",
                        null=True,
                        upload_to="sa_passports/",
                    ),
                ),
                ("sa_passport_expiry_date", models.DateField(blank=True, null=True)),
                (
                    "street_address",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("suburb", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "association",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.association",
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.club",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "local_federation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.localfootballassociation",
                    ),
                ),
                (
                    "mother_body",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.motherbody",
                    ),
                ),
                (
                    "national_federation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.nationalfederation",
                    ),
                ),
                (
                    "province",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.province",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="geography.region",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Custom User",
                "verbose_name_plural": "Custom Users",
                "db_table": "accounts_customuser",
                "ordering": ["email"],
            },
        ),
        migrations.CreateModel(
            name="DocumentAccessLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("player_id", "Player ID Document"),
                            ("player_passport", "Player Passport"),
                            ("player_sa_passport", "Player SA Passport"),
                            ("player_profile", "Player Profile Picture"),
                            ("official_id", "Official ID Document"),
                            ("official_passport", "Official Passport"),
                            ("official_cert", "Official Certification"),
                            ("club_document", "Club Document"),
                            ("other", "Other Document"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "document_name",
                    models.CharField(
                        help_text="Original document filename", max_length=255
                    ),
                ),
                (
                    "document_owner",
                    models.CharField(
                        help_text="Person/entity the document belongs to",
                        max_length=255,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("view", "Viewed"),
                            ("download", "Downloaded"),
                            ("print", "Printed"),
                        ],
                        default="view",
                        max_length=10,
                    ),
                ),
                (
                    "access_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "watermarked",
                    models.BooleanField(
                        default=False, help_text="Whether document was watermarked"
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=True, help_text="Whether access was successful"
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about the access"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who accessed the document",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Document Access Log",
                "verbose_name_plural": "Document Access Logs",
                "db_table": "document_access_log",
                "ordering": ["-access_time"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "levels",
                    models.CharField(
                        default="NATIONAL,PROVINCE,REGION,LFA,CLUB",
                        help_text="Comma-separated list of levels where this position can be used",
                        max_length=100,
                    ),
                ),
                (
                    "employment_type",
                    models.CharField(
                        choices=[
                            ("EMPLOYEE", "Full-time Employee"),
                            ("MEMBER", "Member (Political Structure)"),
                            ("PUBLIC", "Public/Supporter"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "requires_approval",
                    models.BooleanField(
                        default=True, help_text="New positions need admin approval"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_positions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="UserRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.organizationtype",
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.position",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
