# Generated by Django 4.2.16 on 2025-06-08 22:14

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="RegistrationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("allowed_user_roles", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("logo", models.ImageField(blank=True, null=True, upload_to="logos/")),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN_PROVINCE", "Province Admin"),
                            ("ADMIN_REGION", "Region Admin"),
                            ("ADMIN_LOCAL_FED", "Local Federation Admin"),
                            ("CLUB_ADMIN", "Club Administrator"),
                        ],
                        default="ADMIN_PROVINCE",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=50)),
                ("middle_name", models.CharField(blank=True, max_length=100)),
                ("surname", models.CharField(blank=True, max_length=100)),
                ("alias", models.CharField(blank=True, max_length=100)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                    ),
                ),
                (
                    "nationality",
                    models.CharField(
                        default="South African",
                        help_text="User's nationality",
                        max_length=50,
                    ),
                ),
                (
                    "birth_country",
                    models.CharField(
                        default="ZAF",
                        help_text="3-letter country code for country of birth",
                        max_length=3,
                    ),
                ),
                (
                    "popi_act_consent",
                    models.BooleanField(
                        default=False,
                        help_text="User must consent to POPI Act terms for registration",
                    ),
                ),
                (
                    "country_code",
                    models.CharField(blank=True, default="ZAF", max_length=3),
                ),
                (
                    "id_number",
                    models.CharField(
                        blank=True,
                        help_text="13-digit South African ID number",
                        max_length=20,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "id_number_other",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("passport_number", models.CharField(blank=True, max_length=25)),
                (
                    "id_document_type",
                    models.CharField(
                        choices=[
                            ("BC", "Birth Certificate"),
                            ("PP", "Passport"),
                            ("ID", "National ID"),
                            ("DL", "Driver License"),
                            ("OT", "Other"),
                        ],
                        default="ID",
                        max_length=2,
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("membership_card", models.BooleanField(default=False)),
                ("payment_required", models.BooleanField(default=True)),
                (
                    "safa_id",
                    models.CharField(blank=True, max_length=5, null=True, unique=True),
                ),
                (
                    "fifa_id",
                    models.CharField(blank=True, max_length=7, null=True, unique=True),
                ),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos/"
                    ),
                ),
                (
                    "id_document",
                    models.FileField(
                        blank=True, null=True, upload_to="user_documents/"
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("province_id", models.IntegerField(blank=True, null=True)),
                ("region_id", models.IntegerField(blank=True, null=True)),
                ("local_federation_id", models.IntegerField(blank=True, null=True)),
                ("club_id", models.IntegerField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "registration_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="accounts.registrationtype",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
        ),
        migrations.AddConstraint(
            model_name="customuser",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    ("id_number__isnull", False),
                    models.Q(("id_number", ""), _negated=True),
                ),
                fields=("id_number",),
                name="unique_id_number_when_not_blank",
            ),
        ),
    ]
