# Generated by Django 4.2.23 on 2025-07-29 20:18

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("supporters", "__first__"),
        ("membership", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("order_number", models.CharField(max_length=20, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Payment"),
                            ("PAID", "Paid"),
                            ("PROCESSING", "Processing"),
                            ("SHIPPED", "Shipped"),
                            ("DELIVERED", "Delivered"),
                            ("CANCELLED", "Cancelled"),
                            ("REFUNDED", "Refunded"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "shipping_cost",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("payment_method", models.CharField(blank=True, max_length=50)),
                ("shipping_name", models.CharField(max_length=200)),
                ("shipping_address_line1", models.CharField(max_length=200)),
                (
                    "shipping_address_line2",
                    models.CharField(blank=True, max_length=200),
                ),
                ("shipping_city", models.CharField(max_length=100)),
                ("shipping_province", models.CharField(max_length=100)),
                ("shipping_postal_code", models.CharField(max_length=20)),
                ("shipping_phone", models.CharField(blank=True, max_length=20)),
                ("tracking_number", models.CharField(blank=True, max_length=100)),
                ("shipped_date", models.DateTimeField(blank=True, null=True)),
                ("delivered_date", models.DateTimeField(blank=True, null=True)),
                ("order_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="merchandise_orders",
                        to="membership.invoice",
                    ),
                ),
                (
                    "supporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="merchandise_orders",
                        to="supporters.supporterprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=500)),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=200
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("sku", models.CharField(max_length=50, unique=True)),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Weight in grams",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(
                        blank=True, help_text="L x W x H in cm", max_length=100
                    ),
                ),
                ("main_image", models.ImageField(upload_to="merchandise/products/")),
                ("manage_stock", models.BooleanField(default=True)),
                ("stock_quantity", models.PositiveIntegerField(default=0)),
                ("low_stock_threshold", models.PositiveIntegerField(default=5)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_digital", models.BooleanField(default=False)),
                ("requires_shipping", models.BooleanField(default=True)),
                ("meta_title", models.CharField(blank=True, max_length=200)),
                ("meta_description", models.CharField(blank=True, max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("OUT_OF_STOCK", "Out of Stock"),
                        ],
                        default="DRAFT",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, upload_to="merchandise/categories/"),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("display_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Product Categories",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Wishlist",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "products",
                    models.ManyToManyField(blank=True, to="merchandise.product"),
                ),
                (
                    "supporter",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wishlist",
                        to="supporters.supporterprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ShoppingCart",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "supporter",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shopping_cart",
                        to="supporters.supporterprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("size", models.CharField(blank=True, max_length=20)),
                ("color", models.CharField(blank=True, max_length=50)),
                ("material", models.CharField(blank=True, max_length=100)),
                ("sku", models.CharField(max_length=50, unique=True)),
                (
                    "price_adjustment",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("stock_quantity", models.PositiveIntegerField(default=0)),
                (
                    "image",
                    models.ImageField(blank=True, upload_to="merchandise/variants/"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="merchandise.product",
                    ),
                ),
            ],
            options={
                "ordering": ["size", "color"],
                "unique_together": {("product", "size", "color")},
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("image", models.ImageField(upload_to="merchandise/products/gallery/")),
                ("alt_text", models.CharField(blank=True, max_length=200)),
                ("display_order", models.PositiveIntegerField(default=0)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="merchandise.product",
                    ),
                ),
            ],
            options={
                "ordering": ["display_order"],
            },
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="merchandise.productcategory",
            ),
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("product_name", models.CharField(max_length=200)),
                ("product_sku", models.CharField(max_length=50)),
                ("variant_name", models.CharField(blank=True, max_length=100)),
                ("quantity", models.PositiveIntegerField()),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="merchandise.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="merchandise.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="merchandise.productvariant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("review_text", models.TextField()),
                (
                    "image1",
                    models.ImageField(blank=True, upload_to="merchandise/reviews/"),
                ),
                (
                    "image2",
                    models.ImageField(blank=True, upload_to="merchandise/reviews/"),
                ),
                (
                    "image3",
                    models.ImageField(blank=True, upload_to="merchandise/reviews/"),
                ),
                ("is_verified_purchase", models.BooleanField(default=False)),
                ("is_approved", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "order_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="merchandise.orderitem",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="merchandise.product",
                    ),
                ),
                (
                    "supporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="supporters.supporterprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("product", "supporter")},
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="merchandise.shoppingcart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="merchandise.product",
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="merchandise.productvariant",
                    ),
                ),
            ],
            options={
                "unique_together": {("cart", "product", "variant")},
            },
        ),
    ]
