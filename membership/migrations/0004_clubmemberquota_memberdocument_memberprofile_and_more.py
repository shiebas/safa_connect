# Generated by Django 4.2.23 on 2025-08-16 17:27

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0002_remove_lfaadministrator_lfa_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("geography", "0001_initial"),
        ("membership", "0003_delete_memberdocument"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClubMemberQuota",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "max_senior_players",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="Maximum senior players allowed",
                        verbose_name="Max Senior Players",
                    ),
                ),
                (
                    "max_junior_players",
                    models.PositiveIntegerField(
                        default=50,
                        help_text="Maximum junior players allowed",
                        verbose_name="Max Junior Players",
                    ),
                ),
                (
                    "max_officials",
                    models.PositiveIntegerField(
                        default=20,
                        help_text="Maximum officials allowed",
                        verbose_name="Max Officials",
                    ),
                ),
                ("current_senior_players", models.PositiveIntegerField(default=0)),
                ("current_junior_players", models.PositiveIntegerField(default=0)),
                ("current_officials", models.PositiveIntegerField(default=0)),
            ],
            options={
                "verbose_name": "Club Member Quota",
                "verbose_name_plural": "Club Member Quotas",
            },
        ),
        migrations.CreateModel(
            name="MemberDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("ID_COPY", "ID Document Copy"),
                            ("BIRTH_CERT", "Birth Certificate"),
                            ("PASSPORT", "Passport Copy"),
                            ("MEDICAL_CERT", "Medical Certificate"),
                            ("CLEARANCE_CERT", "Clearance Certificate"),
                            ("PHOTO", "Passport Photo"),
                            ("PARENT_CONSENT", "Parental Consent (Under 18)"),
                            ("PROOF_RESIDENCE", "Proof of Residence"),
                            ("QUALIFICATION_CERT", "Qualification Certificate"),
                            ("OTHER", "Other Document"),
                        ],
                        max_length=20,
                        verbose_name="Document Type",
                    ),
                ),
                (
                    "document_file",
                    models.FileField(
                        upload_to="member_documents/%Y/%m/",
                        verbose_name="Document File",
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Verification"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected - Resubmission Required"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Verification Status",
                    ),
                ),
                ("verified_date", models.DateTimeField(blank=True, null=True)),
                (
                    "rejection_notes",
                    models.TextField(blank=True, verbose_name="Rejection Notes"),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="File Size (bytes)"
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="File Type"
                    ),
                ),
                (
                    "is_required",
                    models.BooleanField(
                        default=False, verbose_name="Required Document"
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Document Expiry"
                    ),
                ),
            ],
            options={
                "verbose_name": "Member Document",
                "verbose_name_plural": "Member Documents",
            },
        ),
        migrations.CreateModel(
            name="MemberProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "player_position",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("GK", "Goalkeeper"),
                            ("DF", "Defender"),
                            ("MF", "Midfielder"),
                            ("FW", "Forward"),
                        ],
                        max_length=50,
                        verbose_name="Playing Position",
                    ),
                ),
                (
                    "certification_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Certification Number"
                    ),
                ),
                (
                    "certification_document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="certification_documents/",
                        verbose_name="Certification Document",
                    ),
                ),
                (
                    "certification_expiry_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Certification Expiry Date"
                    ),
                ),
                (
                    "referee_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOCAL", "Local"),
                            ("REGIONAL", "Regional"),
                            ("PROVINCIAL", "Provincial"),
                            ("NATIONAL", "National"),
                            ("INTERNATIONAL", "International"),
                        ],
                        max_length=20,
                        verbose_name="Referee Level",
                    ),
                ),
                (
                    "guardian_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Guardian Name"
                    ),
                ),
                (
                    "guardian_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="Guardian Email"
                    ),
                ),
                (
                    "guardian_phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Guardian Phone"
                    ),
                ),
                (
                    "birth_certificate",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="documents/birth_certificates/",
                        verbose_name="Birth Certificate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Member Profile",
                "verbose_name_plural": "Member Profiles",
            },
        ),
        migrations.CreateModel(
            name="MemberSeasonHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending SAFA Approval"),
                            ("ACTIVE", "SAFA Approved - Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                            ("REJECTED", "Rejected by SAFA"),
                            ("TRANSFERRED", "Transferred from another club"),
                        ],
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("registration_date", models.DateTimeField()),
                (
                    "registration_method",
                    models.CharField(
                        choices=[
                            ("SELF", "Self Registration Online"),
                            ("CLUB", "Club Registration"),
                            ("ADMIN", "Admin Registration"),
                        ],
                        max_length=10,
                        verbose_name="Registration Method",
                    ),
                ),
                (
                    "invoice_paid",
                    models.BooleanField(default=False, verbose_name="Invoice Paid"),
                ),
                (
                    "safa_approved",
                    models.BooleanField(default=False, verbose_name="SAFA Approved"),
                ),
                ("safa_approved_date", models.DateTimeField(blank=True, null=True)),
                ("jersey_number", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "position",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Position"
                    ),
                ),
                ("transfer_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Member Season History",
                "verbose_name_plural": "Member Season Histories",
                "ordering": ["-season_config__season_year"],
            },
        ),
        migrations.CreateModel(
            name="RegistrationWorkflow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "personal_info_status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                        ],
                        default="NOT_STARTED",
                        max_length=20,
                    ),
                ),
                (
                    "club_selection_status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                        ],
                        default="NOT_STARTED",
                        max_length=20,
                    ),
                ),
                (
                    "document_upload_status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                        ],
                        default="NOT_STARTED",
                        max_length=20,
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                        ],
                        default="NOT_STARTED",
                        max_length=20,
                    ),
                ),
                (
                    "club_approval_status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                        ],
                        default="NOT_STARTED",
                        max_length=20,
                    ),
                ),
                (
                    "safa_approval_status",
                    models.CharField(
                        choices=[
                            ("NOT_STARTED", "Not Started"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("BLOCKED", "Blocked"),
                        ],
                        default="NOT_STARTED",
                        max_length=20,
                    ),
                ),
                (
                    "current_step",
                    models.CharField(
                        choices=[
                            ("PERSONAL_INFO", "Personal Information"),
                            ("CLUB_SELECTION", "Club Selection"),
                            ("DOCUMENT_UPLOAD", "Document Upload"),
                            ("PAYMENT", "Payment Processing"),
                            ("CLUB_APPROVAL", "Club Approval"),
                            ("SAFA_APPROVAL", "SAFA Approval"),
                            ("COMPLETE", "Registration Complete"),
                        ],
                        default="PERSONAL_INFO",
                        max_length=20,
                        verbose_name="Current Step",
                    ),
                ),
                (
                    "completion_percentage",
                    models.PositiveIntegerField(default=0, verbose_name="Completion %"),
                ),
            ],
            options={
                "verbose_name": "Registration Workflow",
                "verbose_name_plural": "Registration Workflows",
            },
        ),
        migrations.AlterUniqueTogether(
            name="membershipseasonhistory",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="membershipseasonhistory",
            name="club",
        ),
        migrations.RemoveField(
            model_name="membershipseasonhistory",
            name="lfa",
        ),
        migrations.RemoveField(
            model_name="membershipseasonhistory",
            name="member",
        ),
        migrations.RemoveField(
            model_name="membershipseasonhistory",
            name="province",
        ),
        migrations.RemoveField(
            model_name="membershipseasonhistory",
            name="region",
        ),
        migrations.RemoveField(
            model_name="membershipseasonhistory",
            name="season_config",
        ),
        migrations.RemoveField(
            model_name="membershipseasonhistory",
            name="transferred_from_club",
        ),
        migrations.RemoveField(
            model_name="officialcertification",
            name="member",
        ),
        migrations.AlterModelOptions(
            name="member",
            options={
                "ordering": ["-created"],
                "verbose_name": "Member",
                "verbose_name_plural": "Members",
            },
        ),
        migrations.RemoveIndex(
            model_name="invoiceitem",
            name="membership__invoice_0724f8_idx",
        ),
        migrations.RemoveField(
            model_name="invoiceitem",
            name="unit_price",
        ),
        migrations.RemoveField(
            model_name="member",
            name="alias",
        ),
        migrations.RemoveField(
            model_name="member",
            name="association",
        ),
        migrations.RemoveField(
            model_name="member",
            name="birth_country",
        ),
        migrations.RemoveField(
            model_name="member",
            name="club",
        ),
        migrations.RemoveField(
            model_name="member",
            name="fifa_id",
        ),
        migrations.RemoveField(
            model_name="member",
            name="height",
        ),
        migrations.RemoveField(
            model_name="member",
            name="id_document_type",
        ),
        migrations.RemoveField(
            model_name="member",
            name="jersey_number",
        ),
        migrations.RemoveField(
            model_name="member",
            name="membership_status",
        ),
        migrations.RemoveField(
            model_name="member",
            name="middle_name",
        ),
        migrations.RemoveField(
            model_name="member",
            name="popi_act_consent",
        ),
        migrations.RemoveField(
            model_name="member",
            name="position",
        ),
        migrations.RemoveField(
            model_name="member",
            name="profile_photo",
        ),
        migrations.RemoveField(
            model_name="member",
            name="weight",
        ),
        migrations.AddField(
            model_name="invoiceitem",
            name="amount",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                max_digits=10,
                verbose_name="Amount (Incl. VAT)",
            ),
        ),
        migrations.AddField(
            model_name="invoiceitem",
            name="total_price",
            field=models.DecimalField(
                decimal_places=2, default=0, max_digits=10, verbose_name="Total Price"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_members",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="approved_date",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="member",
            name="associations",
            field=models.ManyToManyField(
                blank=True,
                help_text="Associations this member belongs to (referee, coaching, etc.)",
                related_name="member_officials",
                to="geography.association",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="current_club",
            field=models.ForeignKey(
                help_text="Current club this member belongs to (MANDATORY)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="current_members",
                to="geography.club",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="current_season",
            field=models.ForeignKey(
                blank=True,
                help_text="Season this member is registered for",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="current_season_members",
                to="membership.safaseasonconfig",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="email",
            field=models.EmailField(
                blank=True, max_length=254, null=True, verbose_name="Email Address"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="emergency_contact",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="Emergency Contact"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="emergency_phone",
            field=models.CharField(
                blank=True, max_length=20, verbose_name="Emergency Contact Phone"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="first_name",
            field=models.CharField(
                blank=True, max_length=100, null=True, verbose_name="First Name"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="is_existing_member",
            field=models.BooleanField(
                default=False,
                help_text="Whether this member already had a SAFA ID from previous registration",
                verbose_name="Existing SAFA Member",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="last_name",
            field=models.CharField(
                blank=True, max_length=100, null=True, verbose_name="Last Name"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="location",
            field=models.CharField(
                blank=True,
                help_text="Install PostGIS for full geographic support",
                max_length=100,
                verbose_name="Location Placeholder",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="marketing_consent",
            field=models.BooleanField(default=False, verbose_name="Marketing Consent"),
        ),
        migrations.AddField(
            model_name="member",
            name="medical_notes",
            field=models.TextField(blank=True, verbose_name="Medical Notes"),
        ),
        migrations.AddField(
            model_name="member",
            name="previous_safa_id",
            field=models.CharField(
                blank=True,
                help_text="Previous SAFA ID if this is a transfer/renewal",
                max_length=5,
                null=True,
                verbose_name="Previous SAFA ID",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="privacy_accepted",
            field=models.BooleanField(
                default=False, verbose_name="Privacy Policy Accepted"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="profile_picture",
            field=models.ImageField(
                blank=True,
                null=True,
                upload_to="member_profiles/",
                verbose_name="Profile Picture",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="registration_address",
            field=models.CharField(
                blank=True,
                help_text="Address used to determine organization jurisdiction",
                max_length=255,
                verbose_name="Registration Address",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="registration_complete",
            field=models.BooleanField(
                default=False,
                help_text="All required documents and information provided",
                verbose_name="Registration Complete",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="registration_method",
            field=models.CharField(
                choices=[
                    ("SELF", "Self Registration Online"),
                    ("CLUB", "Club Registration"),
                    ("ADMIN", "Admin Registration"),
                ],
                default="SELF",
                max_length=10,
                verbose_name="Registration Method",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="rejection_reason",
            field=models.TextField(blank=True, verbose_name="Rejection Reason"),
        ),
        migrations.AddField(
            model_name="member",
            name="role",
            field=models.CharField(
                blank=True,
                choices=[
                    ("PLAYER", "Player"),
                    ("OFFICIAL", "Official"),
                    ("ADMIN", "Administrator"),
                ],
                max_length=20,
                null=True,
                verbose_name="Member Role",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending SAFA Approval"),
                    ("ACTIVE", "SAFA Approved - Active"),
                    ("INACTIVE", "Inactive"),
                    ("SUSPENDED", "Suspended"),
                    ("REJECTED", "Rejected by SAFA"),
                    ("TRANSFERRED", "Transferred from another club"),
                ],
                default="PENDING",
                max_length=20,
                verbose_name="SAFA Status",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="terms_accepted",
            field=models.BooleanField(
                default=False, verbose_name="Terms and Conditions Accepted"
            ),
        ),
        migrations.AlterField(
            model_name="invoiceitem",
            name="description",
            field=models.CharField(max_length=255, verbose_name="Description"),
        ),
        migrations.AlterField(
            model_name="member",
            name="city",
            field=models.CharField(blank=True, max_length=100, verbose_name="City"),
        ),
        migrations.AlterField(
            model_name="member",
            name="country",
            field=models.CharField(blank=True, max_length=100, verbose_name="Country"),
        ),
        migrations.AlterField(
            model_name="member",
            name="date_of_birth",
            field=models.DateField(blank=True, null=True, verbose_name="Date of Birth"),
        ),
        migrations.AlterField(
            model_name="member",
            name="gender",
            field=models.CharField(
                blank=True,
                choices=[("M", "Male"), ("F", "Female")],
                max_length=1,
                verbose_name="Gender",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="id_document",
            field=models.FileField(
                blank=True, null=True, upload_to="documents/member_documents/"
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="id_number",
            field=models.CharField(
                blank=True,
                max_length=13,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="ID number must be exactly 13 digits", regex="^\\d{13}$"
                    )
                ],
                verbose_name="ID Number",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="national_federation",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.PROTECT,
                to="geography.nationalfederation",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="nationality",
            field=models.CharField(
                blank=True,
                default="South African",
                max_length=100,
                verbose_name="Nationality",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="passport_number",
            field=models.CharField(
                blank=True, max_length=25, null=True, verbose_name="Passport Number"
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="phone_number",
            field=models.CharField(
                blank=True,
                max_length=20,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid phone number",
                        regex="^\\+?[\\d\\s\\-\\(\\)]{10,20}$",
                    )
                ],
                verbose_name="Phone Number",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="postal_code",
            field=models.CharField(
                blank=True, max_length=20, verbose_name="Postal Code"
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="safa_id",
            field=models.CharField(
                default="",
                help_text="5-digit unique SAFA identification number",
                max_length=5,
                unique=True,
                verbose_name="SAFA ID",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="state",
            field=models.CharField(
                blank=True, max_length=100, verbose_name="State/Province"
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="street_address",
            field=models.CharField(
                blank=True, max_length=255, verbose_name="Street Address"
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="suburb",
            field=models.CharField(blank=True, max_length=100, verbose_name="Suburb"),
        ),
        migrations.AlterField(
            model_name="member",
            name="user",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="member_profile",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Associated User Account",
            ),
        ),
        migrations.AlterField(
            model_name="organizationseasonregistration",
            name="season_config",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="organization_registrations",
                to="membership.safaseasonconfig",
            ),
        ),
        migrations.AlterField(
            model_name="safaseasonconfig",
            name="member_registration_end",
            field=models.DateField(
                help_text="Deadline for individual member registrations",
                verbose_name="Member Registration End",
            ),
        ),
        migrations.AlterField(
            model_name="safaseasonconfig",
            name="member_registration_start",
            field=models.DateField(
                help_text="When individual members can start registering",
                verbose_name="Member Registration Start",
            ),
        ),
        migrations.AlterField(
            model_name="safaseasonconfig",
            name="organization_registration_end",
            field=models.DateField(
                help_text="Deadline for organization membership payments",
                verbose_name="Organization Registration End",
            ),
        ),
        migrations.AlterField(
            model_name="safaseasonconfig",
            name="organization_registration_start",
            field=models.DateField(
                help_text="When organizations can start paying membership fees",
                verbose_name="Organization Registration Start",
            ),
        ),
        migrations.AlterField(
            model_name="transfer",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transfers",
                to="membership.member",
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["safa_id"], name="membership__safa_id_63c8c0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(fields=["email"], name="membership__email_f208cc_idx"),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["current_club", "status"], name="membership__current_7125a7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["current_season", "status"],
                name="membership__current_9fdb3e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="member",
            index=models.Index(
                fields=["role", "status"], name="membership__role_8ff6ac_idx"
            ),
        ),
        migrations.DeleteModel(
            name="MembershipSeasonHistory",
        ),
        migrations.DeleteModel(
            name="OfficialCertification",
        ),
        migrations.AddField(
            model_name="registrationworkflow",
            name="member",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="workflow",
                to="membership.member",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="associations",
            field=models.ManyToManyField(
                blank=True,
                related_name="historical_member_officials",
                to="geography.association",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="club",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="historical_members",
                to="geography.club",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="lfa",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.localfootballassociation",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="season_history",
                to="membership.member",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="province",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.province",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.region",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="season_config",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="member_histories",
                to="membership.safaseasonconfig",
            ),
        ),
        migrations.AddField(
            model_name="memberseasonhistory",
            name="transferred_from_club",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="transferred_from_members",
                to="geography.club",
            ),
        ),
        migrations.AddField(
            model_name="memberprofile",
            name="member",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="profile",
                to="membership.member",
            ),
        ),
        migrations.AddField(
            model_name="memberprofile",
            name="official_position",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="member_profiles",
                to="accounts.position",
            ),
        ),
        migrations.AddField(
            model_name="memberdocument",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documents",
                to="membership.member",
            ),
        ),
        migrations.AddField(
            model_name="memberdocument",
            name="verified_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="verified_documents",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="clubmemberquota",
            name="club",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="member_quotas",
                to="geography.club",
            ),
        ),
        migrations.AddField(
            model_name="clubmemberquota",
            name="season_config",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="club_quotas",
                to="membership.safaseasonconfig",
            ),
        ),
        migrations.AddIndex(
            model_name="memberseasonhistory",
            index=models.Index(
                fields=["member", "season_config"],
                name="membership__member__02e186_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="memberseasonhistory",
            index=models.Index(
                fields=["season_config", "status"],
                name="membership__season__6a5708_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="memberseasonhistory",
            index=models.Index(
                fields=["club", "season_config"], name="membership__club_id_2bfc86_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="memberseasonhistory",
            unique_together={("member", "season_config")},
        ),
        migrations.AddIndex(
            model_name="memberdocument",
            index=models.Index(
                fields=["member", "document_type"],
                name="membership__member__13fda9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="memberdocument",
            index=models.Index(
                fields=["verification_status"], name="membership__verific_47c2da_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="memberdocument",
            unique_together={("member", "document_type")},
        ),
        migrations.AlterUniqueTogether(
            name="clubmemberquota",
            unique_together={("club", "season_config")},
        ),
    ]
