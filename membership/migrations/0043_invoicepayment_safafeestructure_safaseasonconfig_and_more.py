# Generated by Django 4.2.23 on 2025-07-26 09:38

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('geography', '0004_club_affiliation_fees_paid'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('membership', '0042_alter_invoice_official_alter_transfer_player_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='InvoicePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Payment Amount')),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Payment Date')),
                ('payment_method', models.CharField(choices=[('EFT', 'Electronic Funds Transfer'), ('CASH', 'Cash'), ('CARD', 'Credit/Debit Card'), ('CHEQUE', 'Cheque'), ('ONLINE', 'Online Payment'), ('MOBILE', 'Mobile Payment'), ('OTHER', 'Other')], max_length=20, verbose_name='Payment Method')),
                ('payment_reference', models.CharField(blank=True, max_length=100, verbose_name='Payment Reference')),
                ('notes', models.TextField(blank=True, verbose_name='Payment Notes')),
            ],
            options={
                'verbose_name': 'Invoice Payment',
                'verbose_name_plural': 'Invoice Payments',
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='SAFAFeeStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_type', models.CharField(choices=[('ASSOCIATION', 'Association'), ('PROVINCE', 'Province'), ('REGION', 'Region'), ('LFA', 'Local Football Association'), ('CLUB', 'Club'), ('PLAYER_JUNIOR', 'Junior Player (Under 18)'), ('PLAYER_SENIOR', 'Senior Player (18+)'), ('OFFICIAL_REFEREE', 'Referee Official'), ('OFFICIAL_COACH', 'Coach Official'), ('OFFICIAL_GENERAL', 'General Official'), ('OFFICIAL_SECRETARY', 'Secretary Official'), ('OFFICIAL_TREASURER', 'Treasurer Official'), ('OFFICIAL_COMMITTEE', 'Committee Member')], max_length=30, verbose_name='Entity Type')),
                ('annual_fee', models.DecimalField(decimal_places=2, help_text='Annual membership fee excluding VAT in ZAR', max_digits=10, verbose_name='Annual Fee (Excl. VAT)')),
                ('description', models.TextField(blank=True, help_text='Description of what this fee covers', verbose_name='Fee Description')),
                ('is_pro_rata', models.BooleanField(default=True, help_text='Whether this fee can be calculated pro-rata for mid-season registrations', verbose_name='Pro-rata Applicable')),
                ('minimum_fee', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum fee even for late registrations (optional)', max_digits=10, null=True, verbose_name='Minimum Fee (Excl. VAT)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SAFA Fee Structure',
                'verbose_name_plural': 'SAFA Fee Structures',
                'ordering': ['season_config', 'entity_type'],
            },
        ),
        migrations.CreateModel(
            name='SAFASeasonConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_year', models.PositiveIntegerField(help_text='The year this season configuration applies to (e.g., 2025)', unique=True, verbose_name='Season Year')),
                ('season_start_date', models.DateField(help_text='When the season officially begins', verbose_name='Season Start Date')),
                ('season_end_date', models.DateField(help_text='When the season officially ends', verbose_name='Season End Date')),
                ('vat_rate', models.DecimalField(decimal_places=4, default=Decimal('0.1500'), help_text='VAT rate as decimal (e.g., 0.1500 for 15%)', max_digits=5, verbose_name='VAT Rate')),
                ('payment_due_days', models.PositiveIntegerField(default=30, help_text='Number of days from invoice date until payment is due', verbose_name='Payment Due Days')),
                ('is_active', models.BooleanField(default=False, help_text='Only one season can be active at a time', verbose_name='Active Season')),
                ('is_renewal_season', models.BooleanField(default=False, help_text='Whether this is a renewal season (generates invoices for all entities)', verbose_name='Renewal Season')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SAFA Season Configuration',
                'verbose_name_plural': 'SAFA Season Configurations',
                'ordering': ['-season_year'],
            },
        ),
        migrations.AlterModelOptions(
            name='invoice',
            options={'ordering': ['-issue_date', '-created'], 'verbose_name': 'Invoice', 'verbose_name_plural': 'Invoices'},
        ),
        migrations.AlterModelOptions(
            name='membershipapplication',
            options={'verbose_name': 'Membership Application', 'verbose_name_plural': 'Membership Applications'},
        ),
        migrations.RemoveConstraint(
            model_name='playerclubregistration',
            name='unique_active_registration',
        ),
        migrations.RemoveField(
            model_name='invoice',
            name='amount',
        ),
        migrations.RemoveField(
            model_name='invoice',
            name='tax_amount',
        ),
        migrations.AddField(
            model_name='invoice',
            name='is_pro_rata',
            field=models.BooleanField(default=False, help_text='Whether this invoice was calculated pro-rata', verbose_name='Pro-rata Invoice'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='member',
            field=models.ForeignKey(blank=True, help_text='Member this invoice is for', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='membership.member'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='outstanding_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Outstanding Amount'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='pro_rata_months',
            field=models.PositiveIntegerField(blank=True, help_text='Number of months for pro-rata calculation', null=True, verbose_name='Pro-rata Months'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='subtotal',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount excluding VAT', max_digits=12, verbose_name='Subtotal (Excl. VAT)'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='total_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount including VAT', max_digits=12, verbose_name='Total Amount (Incl. VAT)'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='vat_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='VAT amount calculated', max_digits=12, verbose_name='VAT Amount'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='vat_rate',
            field=models.DecimalField(decimal_places=4, default=Decimal('0.1500'), help_text='VAT rate applied (e.g., 0.1500 for 15%)', max_digits=5, verbose_name='VAT Rate'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='content_type',
            field=models.ForeignKey(blank=True, help_text='Type of organization (Club, LFA, etc.)', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='due_date',
            field=models.DateField(blank=True, null=True, verbose_name='Due Date'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='invoice_type',
            field=models.CharField(choices=[('REGISTRATION', 'Registration Fee'), ('ANNUAL_FEE', 'Annual Membership Fee'), ('RENEWAL', 'Season Renewal'), ('MEMBERSHIP', 'Membership Fee'), ('EVENT', 'Event Fee/Ticket'), ('TRANSFER_FEE', 'Transfer Fee'), ('PENALTY', 'Penalty/Fine'), ('MERCHANDISE', 'Merchandise Order'), ('OTHER', 'Other')], default='OTHER', max_length=20, verbose_name='Invoice Type'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='issued_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_invoices', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='official',
            field=models.ForeignKey(blank=True, help_text='Official this invoice is for (if official registration)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='official_invoices', to='membership.official'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='paid_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Amount Paid'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='player',
            field=models.ForeignKey(blank=True, help_text='Player this invoice is for (if player registration)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_invoices', to='membership.player'),
        ),
        migrations.AlterField(
            model_name='invoice',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending Payment'), ('PARTIALLY_PAID', 'Partially Paid'), ('PAID', 'Fully Paid'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled'), ('DISPUTED', 'Disputed')], default='PENDING', max_length=20, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='invoiceitem',
            name='unit_price',
            field=models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit Price (Excl. VAT)'),
        ),
        migrations.AlterField(
            model_name='playerclubregistration',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended'), ('TRANSFERRED', 'Transferred')], default='PENDING', max_length=20, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='transfer',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfers', to='membership.player'),
        ),
        migrations.AlterUniqueTogether(
            name='membership',
            unique_together={('member', 'club', 'start_date')},
        ),
        migrations.AddConstraint(
            model_name='playerclubregistration',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'ACTIVE')), fields=('player', 'club'), name='unique_active_player_registration'),
        ),
        migrations.AddField(
            model_name='safaseasonconfig',
            name='created_by',
            field=models.ForeignKey(help_text='Admin who created this season configuration', on_delete=django.db.models.deletion.PROTECT, related_name='created_season_configs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='safafeestructure',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_fee_structures', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='safafeestructure',
            name='season_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fee_structures', to='membership.safaseasonconfig'),
        ),
        migrations.AddField(
            model_name='invoicepayment',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='membership.invoice'),
        ),
        migrations.AddField(
            model_name='invoicepayment',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='invoice',
            name='season_config',
            field=models.ForeignKey(blank=True, help_text='Season this invoice belongs to (for SAFA fees)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='membership.safaseasonconfig'),
        ),
        migrations.AlterUniqueTogether(
            name='safafeestructure',
            unique_together={('season_config', 'entity_type')},
        ),
    ]
