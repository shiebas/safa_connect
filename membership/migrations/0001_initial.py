# Generated by Django 5.2.1 on 2025-06-02 08:36

import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("geography", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "safa_id",
                    models.CharField(
                        blank=True,
                        help_text="5-digit unique SAFA identification number",
                        max_length=5,
                        null=True,
                        unique=True,
                        verbose_name="SAFA ID",
                    ),
                ),
                (
                    "fifa_id",
                    models.CharField(
                        blank=True,
                        help_text="7-digit unique FIFA identification number",
                        max_length=7,
                        null=True,
                        unique=True,
                        verbose_name="FIFA ID",
                    ),
                ),
                (
                    "id_number",
                    models.CharField(
                        blank=True,
                        help_text="13-digit South African ID number",
                        max_length=13,
                        verbose_name="ID Number",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        help_text="Gender as per ID document",
                        max_length=1,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=100, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Last Name"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email Address"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(max_length=20, verbose_name="Phone Number"),
                ),
                ("date_of_birth", models.DateField(verbose_name="Date of Birth")),
                (
                    "street_address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Street Address"
                    ),
                ),
                (
                    "suburb",
                    models.CharField(blank=True, max_length=100, verbose_name="Suburb"),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="City"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="State/Province"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Postal Code"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Country"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("ADMIN_SYSTEM", "System Administrator"),
                            ("ADMIN_COUNTRY", "Country Administrator"),
                            ("ADMIN_FEDERATION", "Federation Administrator"),
                            ("ADMIN_PROVINCE", "Provincial Administrator"),
                            ("ADMIN_REGION", "Regional Administrator"),
                            ("ADMIN_LOCAL_FED", "Local Federation Administrator"),
                            ("CLUB_ADMIN", "Club Administrator"),
                            ("STAFF", "Staff Member"),
                            ("PLAYER", "Player"),
                            ("COACH", "Coach"),
                            ("OFFICIAL", "Official"),
                            ("SUPPORTER", "Supporter"),
                        ],
                        default="PLAYER",
                        max_length=20,
                        verbose_name="Role",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("PENDING", "Pending"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="PENDING",
                        max_length=10,
                        verbose_name="Membership Status",
                    ),
                ),
                (
                    "membership_number",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        unique=True,
                        verbose_name="Membership Number",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Registration Date",
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(blank=True, null=True, verbose_name="Expiry Date"),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="member_profiles/",
                        verbose_name="Profile Picture",
                    ),
                ),
                (
                    "emergency_contact",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Emergency Contact"
                    ),
                ),
                (
                    "emergency_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        verbose_name="Emergency Contact Phone",
                    ),
                ),
                (
                    "medical_notes",
                    models.TextField(blank=True, verbose_name="Medical Notes"),
                ),
                (
                    "club",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="club_members",
                        to="geography.club",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="member_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Member",
                "verbose_name_plural": "Members",
                "ordering": ["-created"],
                "permissions": [
                    ("can_manage_club_members", "Can manage club members"),
                    ("can_view_club_members", "Can view club members"),
                    ("can_initiate_transfer", "Can initiate player transfers"),
                    ("can_approve_transfer", "Can approve player transfers"),
                    ("can_reject_transfer", "Can reject player transfers"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "member_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="membership.member",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player",
                "verbose_name_plural": "Players",
            },
            bases=("membership.member",),
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="geography.club"
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="membership.member",
                    ),
                ),
            ],
            options={
                "verbose_name": "Membership",
                "verbose_name_plural": "Memberships",
            },
        ),
        migrations.CreateModel(
            name="Transfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "request_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Request Date"
                    ),
                ),
                (
                    "effective_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Effective Date"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "transfer_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Transfer Fee",
                    ),
                ),
                (
                    "reason",
                    models.TextField(blank=True, verbose_name="Transfer Reason"),
                ),
                (
                    "approved_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Approval Date"
                    ),
                ),
                (
                    "rejection_reason",
                    models.TextField(blank=True, verbose_name="Rejection Reason"),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_transfers",
                        to="membership.member",
                    ),
                ),
                (
                    "from_club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers_out",
                        to="geography.club",
                    ),
                ),
                (
                    "to_club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers_in",
                        to="geography.club",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfers",
                        to="membership.player",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Transfer",
                "verbose_name_plural": "Player Transfers",
                "ordering": ["-request_date"],
                "permissions": [
                    ("can_initiate_transfer", "Can initiate player transfers"),
                    ("can_approve_transfer", "Can approve player transfers"),
                    ("can_reject_transfer", "Can reject player transfers"),
                    ("can_view_transfer", "Can view player transfers"),
                ],
            },
        ),
        migrations.CreateModel(
            name="TransferAppeal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("UPHELD", "Upheld"),
                            ("DISMISSED", "Dismissed"),
                            ("WITHDRAWN", "Withdrawn"),
                            ("ESCALATED", "Escalated to Federation"),
                            ("FEDERATION_APPROVED", "Approved by Federation"),
                            ("FEDERATION_REJECTED", "Rejected by Federation"),
                        ],
                        default="PENDING",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                ("appeal_reason", models.TextField(verbose_name="Appeal Reason")),
                (
                    "supporting_document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="transfer_appeals/",
                        verbose_name="Supporting Document",
                    ),
                ),
                (
                    "review_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Review Date"
                    ),
                ),
                (
                    "review_notes",
                    models.TextField(blank=True, verbose_name="Review Notes"),
                ),
                (
                    "appeal_submission_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Appeal Submission Date",
                    ),
                ),
                (
                    "federation_review_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Federation Review Date"
                    ),
                ),
                (
                    "federation_review_notes",
                    models.TextField(
                        blank=True, verbose_name="Federation Review Notes"
                    ),
                ),
                (
                    "requires_federation_approval",
                    models.BooleanField(
                        default=False,
                        help_text="If true, the appeal must be approved by the National Federation",
                        verbose_name="Requires Federation Approval",
                    ),
                ),
                (
                    "federation_reviewer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="federation_reviewed_appeals",
                        to="membership.member",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_appeals",
                        to="membership.member",
                    ),
                ),
                (
                    "submitted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submitted_appeals",
                        to="membership.member",
                    ),
                ),
                (
                    "transfer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appeal",
                        to="membership.transfer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transfer Appeal",
                "verbose_name_plural": "Transfer Appeals",
                "ordering": ["-appeal_submission_date"],
                "permissions": [
                    ("can_review_appeals", "Can review transfer appeals"),
                    ("can_submit_appeals", "Can submit transfer appeals"),
                    (
                        "can_review_federation_appeals",
                        "Can review federation-level appeals",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PlayerClubRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "registration_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Registration Date",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                            ("TRANSFERRED", "Transferred"),
                        ],
                        default="INACTIVE",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Registration Expiry"
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("GK", "Goalkeeper"),
                            ("DF", "Defender"),
                            ("MF", "Midfielder"),
                            ("FW", "Forward"),
                        ],
                        max_length=2,
                        verbose_name="Position",
                    ),
                ),
                (
                    "jersey_number",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Jersey Number"
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Height (cm)",
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Weight (kg)",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "club",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_registrations",
                        to="geography.club",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="club_registrations",
                        to="membership.player",
                    ),
                ),
            ],
            options={
                "verbose_name": "Player Club Registration",
                "verbose_name_plural": "Player Club Registrations",
                "ordering": ["-registration_date"],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("status", "INACTIVE")),
                        fields=("player", "club"),
                        name="unique_active_registration",
                    )
                ],
            },
        ),
    ]
