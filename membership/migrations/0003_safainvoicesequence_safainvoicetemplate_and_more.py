# Generated by Django 5.2.4 on 2025-08-26 19:01

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('membership', '0002_alter_member_gender'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SAFAInvoiceSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(default='SAFA', help_text='Prefix for invoice numbers (e.g., SAFA, INV)', max_length=10, verbose_name='Invoice Prefix')),
                ('current_number', models.PositiveIntegerField(default=1, help_text='Current invoice number (will be incremented)', verbose_name='Current Number')),
                ('number_length', models.PositiveIntegerField(default=6, help_text='Total length of number part (padded with zeros)', verbose_name='Number Length')),
            ],
            options={
                'verbose_name': 'SAFA Invoice Sequence',
                'verbose_name_plural': 'SAFA Invoice Sequences',
            },
        ),
        migrations.CreateModel(
            name='SAFAInvoiceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_type', models.CharField(choices=[('REGISTRATION', 'Registration Invoice'), ('ANNUAL_FEE', 'Annual Membership Fee'), ('RENEWAL', 'Season Renewal'), ('PENALTY', 'Penalty/Fine'), ('EVENT', 'Event Fee'), ('OTHER', 'Other')], max_length=20, unique=True, verbose_name='Template Type')),
                ('subject_template', models.CharField(help_text='Template for email subject. Use {variables} for dynamic content.', max_length=200, verbose_name='Email Subject Template')),
                ('email_body_template', models.TextField(help_text='Template for email body. Use {variables} for dynamic content.', verbose_name='Email Body Template')),
                ('sms_template', models.TextField(blank=True, help_text='Template for SMS notifications (max 160 characters)', max_length=160, verbose_name='SMS Template')),
                ('description_template', models.CharField(help_text='Template for invoice line item descriptions', max_length=500, verbose_name='Invoice Description Template')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SAFA Invoice Template',
                'verbose_name_plural': 'SAFA Invoice Templates',
            },
        ),
        migrations.CreateModel(
            name='SAFAPaymentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Monthly Payment Plan', 'Quarterly Plan'", max_length=100, verbose_name='Plan Name')),
                ('frequency', models.CharField(choices=[('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('BIANNUAL', 'Bi-Annual'), ('ANNUAL', 'Annual')], max_length=20, verbose_name='Payment Frequency')),
                ('number_of_installments', models.PositiveIntegerField(help_text='How many payments in total', verbose_name='Number of Installments')),
                ('installment_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Additional fee per installment for processing', max_digits=8, verbose_name='Installment Processing Fee')),
                ('is_available_for_organizations', models.BooleanField(default=True, help_text='Whether organizations (clubs, LFAs, etc.) can use this plan', verbose_name='Available for Organizations')),
                ('is_available_for_individuals', models.BooleanField(default=True, help_text='Whether individuals (players, officials) can use this plan', verbose_name='Available for Individuals')),
                ('minimum_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Minimum invoice amount to qualify for this payment plan', max_digits=10, verbose_name='Minimum Invoice Amount')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'SAFA Payment Plan',
                'verbose_name_plural': 'SAFA Payment Plans',
                'ordering': ['season_config', 'number_of_installments'],
            },
        ),
        migrations.AlterModelOptions(
            name='safafeestructure',
            options={'ordering': ['season_config', 'entity_type'], 'verbose_name': 'SAFA Fee Structure', 'verbose_name_plural': 'SAFA Fee Structures'},
        ),
        migrations.RemoveIndex(
            model_name='safafeestructure',
            name='membership__season__1a7a2a_idx',
        ),
        migrations.RemoveIndex(
            model_name='safafeestructure',
            name='membership__is_orga_a5e50a_idx',
        ),
        migrations.RemoveIndex(
            model_name='safaseasonconfig',
            name='membership__season__3b5917_idx',
        ),
        migrations.RemoveIndex(
            model_name='safaseasonconfig',
            name='membership__is_acti_48e5fc_idx',
        ),
        migrations.RemoveField(
            model_name='safafeestructure',
            name='requires_organization_payment',
        ),
        migrations.AddField(
            model_name='member',
            name='card_delivery_preference',
            field=models.CharField(choices=[('DIGITAL_ONLY', 'Digital Only'), ('PHYSICAL_ONLY', 'Physical Only'), ('BOTH', 'Both Digital and Physical')], default='DIGITAL_ONLY', help_text='Preferred method for receiving membership cards.', max_length=20, verbose_name='Card Delivery Preference'),
        ),
        migrations.AddField(
            model_name='member',
            name='physical_card_delivery_address',
            field=models.TextField(blank=True, help_text='Address for physical card delivery, if different from primary address.', verbose_name='Physical Card Delivery Address'),
        ),
        migrations.AddField(
            model_name='member',
            name='physical_card_requested',
            field=models.BooleanField(default=False, help_text='Whether the member has requested a physical membership card.', verbose_name='Physical Card Requested'),
        ),
        migrations.AlterField(
            model_name='safafeestructure',
            name='annual_fee',
            field=models.DecimalField(decimal_places=2, help_text='Annual membership fee excluding VAT in ZAR', max_digits=10, verbose_name='Annual Fee (Excl. VAT)'),
        ),
        migrations.AlterField(
            model_name='safafeestructure',
            name='description',
            field=models.TextField(blank=True, help_text='Description of what this fee covers', verbose_name='Fee Description'),
        ),
        migrations.AlterField(
            model_name='safafeestructure',
            name='is_pro_rata',
            field=models.BooleanField(default=True, help_text='Whether this fee can be calculated pro-rata for mid-season registrations', verbose_name='Pro-rata Applicable'),
        ),
        migrations.AlterField(
            model_name='safafeestructure',
            name='minimum_fee',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Minimum fee even for late registrations (optional)', max_digits=10, null=True, verbose_name='Minimum Fee (Excl. VAT)'),
        ),
        migrations.AlterField(
            model_name='safaseasonconfig',
            name='created_by',
            field=models.ForeignKey(help_text='Admin who created this season configuration', on_delete=django.db.models.deletion.PROTECT, related_name='created_season_configs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='safaseasonconfig',
            name='is_active',
            field=models.BooleanField(default=False, help_text='Only one season can be active at a time', verbose_name='Active Season'),
        ),
        migrations.AlterField(
            model_name='safaseasonconfig',
            name='is_renewal_season',
            field=models.BooleanField(default=False, help_text='Whether this is a renewal season (generates invoices for all entities)', verbose_name='Renewal Season'),
        ),
        migrations.AlterField(
            model_name='safaseasonconfig',
            name='payment_due_days',
            field=models.PositiveIntegerField(default=30, help_text='Number of days from invoice date until payment is due', verbose_name='Payment Due Days'),
        ),
        migrations.AlterField(
            model_name='safaseasonconfig',
            name='season_end_date',
            field=models.DateField(help_text='When the season officially ends', verbose_name='Season End Date'),
        ),
        migrations.AlterField(
            model_name='safaseasonconfig',
            name='season_start_date',
            field=models.DateField(help_text='When the season officially begins', verbose_name='Season Start Date'),
        ),
        migrations.AlterField(
            model_name='safaseasonconfig',
            name='vat_rate',
            field=models.DecimalField(decimal_places=4, default=Decimal('0.1500'), help_text='VAT rate as decimal (e.g., 0.1500 for 15%)', max_digits=5, verbose_name='VAT Rate'),
        ),
        migrations.AddField(
            model_name='safainvoicesequence',
            name='season_config',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_sequence', to='membership.safaseasonconfig'),
        ),
        migrations.AddField(
            model_name='safapaymentplan',
            name='season_config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_plans', to='membership.safaseasonconfig'),
        ),
    ]
