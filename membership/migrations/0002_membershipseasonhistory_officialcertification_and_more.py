# Generated by Django 4.2.23 on 2025-08-12 19:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("geography", "0001_initial"),
        ("membership", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MembershipSeasonHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending SAFA Approval"),
                            ("ACTIVE", "SAFA Approved - Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                            ("REJECTED", "Rejected by SAFA"),
                            ("TRANSFERRED", "Transferred from another club"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("registration_date", models.DateTimeField(blank=True, null=True)),
                ("registration_method", models.CharField(blank=True, max_length=50)),
                ("invoice_paid", models.BooleanField(default=False)),
                ("safa_approved", models.BooleanField(default=False)),
                ("safa_approved_date", models.DateTimeField(blank=True, null=True)),
                ("transfer_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Membership Season History",
                "verbose_name_plural": "Membership Season Histories",
                "ordering": ["-season_config__season_year", "member__user__last_name"],
            },
        ),
        migrations.CreateModel(
            name="OfficialCertification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "certification_type",
                    models.CharField(
                        choices=[
                            ("REFEREE", "Referee Certification"),
                            ("COACH", "Coaching Certification"),
                            ("ADMIN", "Administrative Certification"),
                            ("OTHER", "Other Certification"),
                        ],
                        help_text="Type of certification",
                        max_length=20,
                        verbose_name="Certification Type",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("LOCAL", "Local"),
                            ("REGIONAL", "Regional"),
                            ("PROVINCIAL", "Provincial"),
                            ("NATIONAL", "National"),
                            ("INTERNATIONAL", "International"),
                        ],
                        help_text="Level or grade of the certification",
                        max_length=20,
                        verbose_name="Level",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the specific certification or qualification",
                        max_length=100,
                        verbose_name="Certification Name",
                    ),
                ),
                (
                    "issuing_body",
                    models.CharField(
                        help_text="Organization that issued this certification",
                        max_length=100,
                        verbose_name="Issuing Organization",
                    ),
                ),
                (
                    "certification_number",
                    models.CharField(
                        blank=True,
                        help_text="Unique identifier for this certification",
                        max_length=50,
                        null=True,
                        verbose_name="Certification Number",
                    ),
                ),
                (
                    "obtained_date",
                    models.DateField(
                        help_text="When the certification was first obtained",
                        verbose_name="Date Obtained",
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="When the certification expires (if applicable)",
                        null=True,
                        verbose_name="Expiry Date",
                    ),
                ),
                (
                    "document",
                    models.FileField(
                        blank=True,
                        help_text="Upload proof of certification",
                        null=True,
                        upload_to="certification_documents/history/",
                        verbose_name="Certificate Document",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Additional information about this certification",
                        verbose_name="Notes",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this certification has been verified by an administrator",
                        verbose_name="Verified",
                    ),
                ),
            ],
            options={
                "verbose_name": "Official Certification",
                "verbose_name_plural": "Official Certifications",
                "ordering": ["-obtained_date"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="clubmemberquota",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="clubmemberquota",
            name="club",
        ),
        migrations.RemoveField(
            model_name="clubmemberquota",
            name="season_config",
        ),
        migrations.RemoveField(
            model_name="memberprofile",
            name="member",
        ),
        migrations.RemoveField(
            model_name="memberprofile",
            name="official_position",
        ),
        migrations.AlterUniqueTogether(
            name="memberseasonhistory",
            unique_together=None,
        ),
        migrations.RemoveIndex(
            model_name='memberseasonhistory',
            name='membership__member__02e186_idx',
        ),
        migrations.RemoveIndex(
            model_name='memberseasonhistory',
            name='membership__season__6a5708_idx',
        ),
        migrations.RemoveIndex(
            model_name='memberseasonhistory',
            name='membership__club_id_2bfc86_idx',
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="associations",
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="club",
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="lfa",
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="member",
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="province",
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="region",
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="season_config",
        ),
        migrations.RemoveField(
            model_name="memberseasonhistory",
            name="transferred_from_club",
        ),
        migrations.RemoveField(
            model_name="registrationworkflow",
            name="member",
        ),
        migrations.AlterModelOptions(
            name="member",
            options={"verbose_name": "Member", "verbose_name_plural": "Members"},
        ),
        migrations.RemoveIndex(
            model_name="member",
            name="membership__safa_id_63c8c0_idx",
        ),
        migrations.RemoveIndex(
            model_name="member",
            name="membership__email_f208cc_idx",
        ),
        migrations.RemoveIndex(
            model_name="member",
            name="membership__current_7125a7_idx",
        ),
        migrations.RemoveIndex(
            model_name="member",
            name="membership__current_9fdb3e_idx",
        ),
        migrations.RemoveIndex(
            model_name="member",
            name="membership__role_8ff6ac_idx",
        ),
        migrations.RemoveField(
            model_name="member",
            name="approved_by",
        ),
        migrations.RemoveField(
            model_name="member",
            name="approved_date",
        ),
        migrations.RemoveField(
            model_name="member",
            name="associations",
        ),
        migrations.RemoveField(
            model_name="member",
            name="current_club",
        ),
        migrations.RemoveField(
            model_name="member",
            name="current_season",
        ),
        migrations.RemoveField(
            model_name="member",
            name="email",
        ),
        migrations.RemoveField(
            model_name="member",
            name="emergency_contact",
        ),
        migrations.RemoveField(
            model_name="member",
            name="emergency_phone",
        ),
        migrations.RemoveField(
            model_name="member",
            name="first_name",
        ),
        migrations.RemoveField(
            model_name="member",
            name="is_existing_member",
        ),
        migrations.RemoveField(
            model_name="member",
            name="last_name",
        ),
        migrations.RemoveField(
            model_name="member",
            name="location",
        ),
        migrations.RemoveField(
            model_name="member",
            name="marketing_consent",
        ),
        migrations.RemoveField(
            model_name="member",
            name="medical_notes",
        ),
        migrations.RemoveField(
            model_name="member",
            name="previous_safa_id",
        ),
        migrations.RemoveField(
            model_name="member",
            name="privacy_accepted",
        ),
        migrations.RemoveField(
            model_name="member",
            name="profile_picture",
        ),
        migrations.RemoveField(
            model_name="member",
            name="registration_address",
        ),
        migrations.RemoveField(
            model_name="member",
            name="registration_complete",
        ),
        migrations.RemoveField(
            model_name="member",
            name="registration_method",
        ),
        migrations.RemoveField(
            model_name="member",
            name="rejection_reason",
        ),
        migrations.RemoveField(
            model_name="member",
            name="role",
        ),
        migrations.RemoveField(
            model_name="member",
            name="status",
        ),
        migrations.RemoveField(
            model_name="member",
            name="terms_accepted",
        ),
        migrations.AddField(
            model_name="member",
            name="alias",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="member",
            name="association",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.association",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="birth_country",
            field=models.CharField(default="ZAF", max_length=3),
        ),
        migrations.AddField(
            model_name="member",
            name="club",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.club",
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="fifa_id",
            field=models.CharField(blank=True, max_length=7, null=True, unique=True),
        ),
        migrations.AddField(
            model_name="member",
            name="height",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=5, null=True
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="id_document_type",
            field=models.CharField(
                choices=[
                    ("BC", "Birth Certificate"),
                    ("PP", "Passport"),
                    ("ID", "National ID"),
                    ("DL", "Driver License"),
                    ("OT", "Other"),
                ],
                default="ID",
                max_length=2,
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="jersey_number",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="member",
            name="membership_status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending SAFA Approval"),
                    ("ACTIVE", "SAFA Approved - Active"),
                    ("INACTIVE", "Inactive"),
                    ("SUSPENDED", "Suspended"),
                    ("REJECTED", "Rejected by SAFA"),
                    ("TRANSFERRED", "Transferred from another club"),
                ],
                default="PENDING",
                max_length=20,
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="middle_name",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name="member",
            name="popi_act_consent",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="member",
            name="position",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name="member",
            name="profile_photo",
            field=models.ImageField(
                blank=True, null=True, upload_to="images/profile_photos/"
            ),
        ),
        migrations.AddField(
            model_name="member",
            name="weight",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=5, null=True
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="city",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name="member",
            name="country",
            field=models.CharField(blank=True, default="South Africa", max_length=100),
        ),
        migrations.AlterField(
            model_name="member",
            name="date_of_birth",
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="member",
            name="gender",
            field=models.CharField(
                blank=True, choices=[("M", "Male"), ("F", "Female")], max_length=1
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="id_document",
            field=models.FileField(
                blank=True, null=True, upload_to="documents/user_documents/"
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="id_number",
            field=models.CharField(blank=True, max_length=20, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name="member",
            name="national_federation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.nationalfederation",
            ),
        ),
        migrations.AlterField(
            model_name="member",
            name="nationality",
            field=models.CharField(default="South African", max_length=50),
        ),
        migrations.AlterField(
            model_name="member",
            name="passport_number",
            field=models.CharField(blank=True, max_length=25, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name="member",
            name="phone_number",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterField(
            model_name="member",
            name="postal_code",
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterField(
            model_name="member",
            name="safa_id",
            field=models.CharField(blank=True, max_length=5, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name="member",
            name="state",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name="member",
            name="street_address",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name="member",
            name="suburb",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name="member",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="member_profile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.DeleteModel(
            name="ClubMemberQuota",
        ),
        migrations.DeleteModel(
            name="MemberProfile",
        ),
        migrations.DeleteModel(
            name="MemberSeasonHistory",
        ),
        migrations.DeleteModel(
            name="RegistrationWorkflow",
        ),
        migrations.AddField(
            model_name="officialcertification",
            name="member",
            field=models.ForeignKey(
                help_text="The official who holds this certification",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="certifications",
                to="membership.member",
            ),
        ),
        migrations.AddField(
            model_name="membershipseasonhistory",
            name="club",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="member_season_histories",
                to="geography.club",
            ),
        ),
        migrations.AddField(
            model_name="membershipseasonhistory",
            name="lfa",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.localfootballassociation",
            ),
        ),
        migrations.AddField(
            model_name="membershipseasonhistory",
            name="member",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="season_histories",
                to="membership.member",
            ),
        ),
        migrations.AddField(
            model_name="membershipseasonhistory",
            name="province",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.province",
            ),
        ),
        migrations.AddField(
            model_name="membershipseasonhistory",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geography.region",
            ),
        ),
        migrations.AddField(
            model_name="membershipseasonhistory",
            name="season_config",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="member_season_histories",
                to="membership.safaseasonconfig",
            ),
        ),
        migrations.AddField(
            model_name="membershipseasonhistory",
            name="transferred_from_club",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="transferred_members",
                to="geography.club",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="membershipseasonhistory",
            unique_together={("member", "season_config")},
        ),
    ]